# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import wallet_pb2 as wallet__pb2


class walletStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.debit = channel.unary_unary(
                '/databank.wallet/debit',
                request_serializer=wallet__pb2.user.SerializeToString,
                response_deserializer=wallet__pb2.reply.FromString,
                )
        self.credit = channel.unary_unary(
                '/databank.wallet/credit',
                request_serializer=wallet__pb2.user.SerializeToString,
                response_deserializer=wallet__pb2.reply.FromString,
                )
        self.balance = channel.unary_unary(
                '/databank.wallet/balance',
                request_serializer=wallet__pb2.user.SerializeToString,
                response_deserializer=wallet__pb2.reply.FromString,
                )
        self.add_user = channel.unary_unary(
                '/databank.wallet/add_user',
                request_serializer=wallet__pb2.user.SerializeToString,
                response_deserializer=wallet__pb2.reply.FromString,
                )
        self.remove_user = channel.unary_unary(
                '/databank.wallet/remove_user',
                request_serializer=wallet__pb2.user.SerializeToString,
                response_deserializer=wallet__pb2.reply.FromString,
                )


class walletServicer(object):
    """Missing associated documentation comment in .proto file."""

    def debit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def credit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def balance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def add_user(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def remove_user(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_walletServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'debit': grpc.unary_unary_rpc_method_handler(
                    servicer.debit,
                    request_deserializer=wallet__pb2.user.FromString,
                    response_serializer=wallet__pb2.reply.SerializeToString,
            ),
            'credit': grpc.unary_unary_rpc_method_handler(
                    servicer.credit,
                    request_deserializer=wallet__pb2.user.FromString,
                    response_serializer=wallet__pb2.reply.SerializeToString,
            ),
            'balance': grpc.unary_unary_rpc_method_handler(
                    servicer.balance,
                    request_deserializer=wallet__pb2.user.FromString,
                    response_serializer=wallet__pb2.reply.SerializeToString,
            ),
            'add_user': grpc.unary_unary_rpc_method_handler(
                    servicer.add_user,
                    request_deserializer=wallet__pb2.user.FromString,
                    response_serializer=wallet__pb2.reply.SerializeToString,
            ),
            'remove_user': grpc.unary_unary_rpc_method_handler(
                    servicer.remove_user,
                    request_deserializer=wallet__pb2.user.FromString,
                    response_serializer=wallet__pb2.reply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'databank.wallet', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class wallet(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def debit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/databank.wallet/debit',
            wallet__pb2.user.SerializeToString,
            wallet__pb2.reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def credit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/databank.wallet/credit',
            wallet__pb2.user.SerializeToString,
            wallet__pb2.reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def balance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/databank.wallet/balance',
            wallet__pb2.user.SerializeToString,
            wallet__pb2.reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def add_user(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/databank.wallet/add_user',
            wallet__pb2.user.SerializeToString,
            wallet__pb2.reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def remove_user(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/databank.wallet/remove_user',
            wallet__pb2.user.SerializeToString,
            wallet__pb2.reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
